import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error

# Sample dataset
data = {'Month': pd.date_range(start="2023-01-01", periods=12, freq='M'),
        'ActiveClients': [120, 135, 150, 170, 190, 210, 230, 250, 270, 300, 320, 340]}
df = pd.DataFrame(data)


def create_lagged_features(df, target_column, lag=6):
    for i in range(1, lag + 1):
        df[f"Lag_{i}"] = df[target_column].shift(i)
    df = df.dropna().reset_index(drop=True)
    return df

df_lagged = create_lagged_features(df, 'ActiveClients', lag=6)

X = df_lagged.drop(columns=['Month', 'ActiveClients'])
y = df_lagged['ActiveClients']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, shuffle=False)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)


y_pred = model.predict(X_test)


rmse = np.sqrt(mean_squared_error(y_test, y_pred))
mae = mean_absolute_error(y_test, y_pred)

print(f"RMSE: {rmse:.2f}, MAE: {mae:.2f}")
